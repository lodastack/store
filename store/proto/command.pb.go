// Code generated by protoc-gen-go. DO NOT EDIT.
// source: command.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command_CommandType int32

const (
	Command_UPDATE                   Command_CommandType = 0
	Command_BATCH                    Command_CommandType = 1
	Command_CREATE_BUCKET            Command_CommandType = 2
	Command_REMOVE_BUCKET            Command_CommandType = 3
	Command_REMOVE_KEY               Command_CommandType = 4
	Command_CREATE_BUCKET_IFNOTEXIST Command_CommandType = 5
	Command_SET_SESSION              Command_CommandType = 6
	Command_DEL_SESSION              Command_CommandType = 7
	Command_SET_PEER                 Command_CommandType = 8
	Command_RESTORE                  Command_CommandType = 9
)

var Command_CommandType_name = map[int32]string{
	0: "UPDATE",
	1: "BATCH",
	2: "CREATE_BUCKET",
	3: "REMOVE_BUCKET",
	4: "REMOVE_KEY",
	5: "CREATE_BUCKET_IFNOTEXIST",
	6: "SET_SESSION",
	7: "DEL_SESSION",
	8: "SET_PEER",
	9: "RESTORE",
}
var Command_CommandType_value = map[string]int32{
	"UPDATE":                   0,
	"BATCH":                    1,
	"CREATE_BUCKET":            2,
	"REMOVE_BUCKET":            3,
	"REMOVE_KEY":               4,
	"CREATE_BUCKET_IFNOTEXIST": 5,
	"SET_SESSION":              6,
	"DEL_SESSION":              7,
	"SET_PEER":                 8,
	"RESTORE":                  9,
}

func (x Command_CommandType) String() string {
	return proto.EnumName(Command_CommandType_name, int32(x))
}
func (Command_CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_command_a2ac166fa5d4bd0e, []int{0, 0}
}

type Command struct {
	Type                 Command_CommandType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.Command_CommandType" json:"type,omitempty"`
	Sub                  []byte              `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_command_a2ac166fa5d4bd0e, []int{0}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetType() Command_CommandType {
	if m != nil {
		return m.Type
	}
	return Command_UPDATE
}

func (m *Command) GetSub() []byte {
	if m != nil {
		return m.Sub
	}
	return nil
}

func init() {
	proto.RegisterType((*Command)(nil), "pb.Command")
	proto.RegisterEnum("pb.Command_CommandType", Command_CommandType_name, Command_CommandType_value)
}

func init() { proto.RegisterFile("command.proto", fileDescriptor_command_a2ac166fa5d4bd0e) }

var fileDescriptor_command_a2ac166fa5d4bd0e = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x80, 0x61, 0xb7, 0x40, 0x0b, 0x53, 0xc0, 0x71, 0x2e, 0xf6, 0xe0, 0x81, 0x70, 0x22, 0x31,
	0xe9, 0x41, 0x9f, 0xa0, 0x94, 0x31, 0x36, 0x28, 0x25, 0xbb, 0x83, 0xd1, 0x53, 0xe3, 0x2a, 0x47,
	0xec, 0x46, 0xf1, 0xc0, 0xcd, 0x97, 0xf2, 0xfd, 0xcc, 0x22, 0x36, 0x72, 0xda, 0xcd, 0x37, 0xff,
	0x5c, 0x06, 0x06, 0x2f, 0xf5, 0x66, 0xf3, 0xfc, 0xf6, 0x9a, 0xba, 0xf7, 0x7a, 0x5b, 0x53, 0xe0,
	0xec, 0xf8, 0x2b, 0x80, 0x28, 0xff, 0x55, 0xba, 0x84, 0xf6, 0x76, 0xe7, 0xd6, 0x89, 0x1a, 0xa9,
	0xc9, 0xf0, 0xea, 0x3c, 0x75, 0x36, 0x3d, 0x8c, 0xfe, 0x5e, 0xd9, 0xb9, 0xb5, 0xde, 0x47, 0x84,
	0xd0, 0xfa, 0xf8, 0xb4, 0x49, 0x30, 0x52, 0x93, 0xbe, 0xf6, 0xdf, 0xf1, 0xb7, 0x82, 0xf8, 0x5f,
	0x47, 0x00, 0xe1, 0x6a, 0x39, 0xcb, 0x84, 0xf1, 0x84, 0x7a, 0xd0, 0x99, 0x66, 0x92, 0xdf, 0xa2,
	0xa2, 0x33, 0x18, 0xe4, 0x9a, 0x33, 0xe1, 0x6a, 0xba, 0xca, 0xe7, 0x2c, 0x18, 0x78, 0xd2, 0x7c,
	0x5f, 0x3e, 0x34, 0xd4, 0xa2, 0x21, 0xc0, 0x81, 0xe6, 0xfc, 0x84, 0x6d, 0xba, 0x80, 0xe4, 0x68,
	0xab, 0x2a, 0x6e, 0x16, 0xa5, 0xf0, 0x63, 0x61, 0x04, 0x3b, 0x74, 0x0a, 0xb1, 0x61, 0xa9, 0x0c,
	0x1b, 0x53, 0x94, 0x0b, 0x0c, 0x3d, 0xcc, 0xf8, 0xae, 0x81, 0x88, 0xfa, 0xd0, 0xf5, 0xc5, 0x92,
	0x59, 0x63, 0x97, 0x62, 0x88, 0x34, 0x1b, 0x29, 0x35, 0x63, 0xcf, 0x86, 0xfb, 0x6b, 0x5c, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x7f, 0xcb, 0x92, 0x1e, 0x01, 0x00, 0x00,
}
